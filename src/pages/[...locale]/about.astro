---
import { i18n } from "astro:config/client";
import { getCollection } from "astro:content";
import Time from "$utils/time";
import Base from "$layouts/Base.astro";
import i18nit from "$i18n";
import { render } from "astro:content";

export async function getStaticPaths() {
	return i18n?.locales.map(locale => ({
		params: { locale: locale == i18n?.defaultLocale ? undefined : (locale as string) }
	}));
}

const { locale = i18n!.defaultLocale } = Astro.params;

const t = i18nit(locale);

const information = await getCollection("information", information => {
	const [language, id] = information.id.split("/");
	information.id = id;
	return language == locale;
});

let introduction = information.find(info => info.id == "introduction");
let roll = information.find(info => info.id == "roll");

const { Content: Introduction } = introduction ? await render(introduction) : ({} as any);
const { Content: Roll } = roll ? await render(roll) : ({} as any);

let chronicle = information.find(info => info.id == "chronicle")?.data;
let chronicles = Object.entries<string[]>(chronicle ?? {})
	.map(([date, events]) => ({ date: new Date(date), events: events ?? [] }))
	.sort((a, b) => b.date.getTime() - a.date.getTime());

// 你可以改这里：作者信息 & 照片路径
const author = {
	name: "KraHsu",
	title: "BIT Dr.",
	photo: "/images/author.png",
	photo_dark: "/images/author-d.png",
	intro: "Stay hungry, stay foolish."
};
---

<Base title={t("navigation.about")} {locale}>
	<main class="flex flex-col sm:flex-row justify-between gap-2">
		<article class="flex flex-col">
			{
				introduction && (
					<div class="mb-8">
						<h1 class="mb-4 text-1.8rem lh-tight font-700">{t("about.introduction")}</h1>
						<samp class="markdown">
							<Introduction />
						</samp>
					</div>
				)
			}
			{
				roll && (
					<div class="mb-8">
						<h1 class="mb-4 text-1.8rem lh-tight font-700">{t("about.roll")}</h1>
						<samp class="markdown">
							<Roll />
						</samp>
					</div>
				)
			}
		</article>

		<aside class="flex flex-col justify-between flex-basis-300px flex-shrink-0 mb-3 pl-5">
			{/* 作者 */}
			<section class="relative mb-4 p-5 rd-2xl
					bg-gradient-to-b from-white/66 to-white/40
					shadow-[0_1px_2px_rgba(0,0,0,0.06),0_10px_30px_rgba(0,0,0,0.06)]
					backdrop-blur-md
					border border-[rgba(125,125,125,0.12)]
					dt:(from-zinc-900/66 to-zinc-900/40 border-white/6)">
				<figure class="m-0">
					<img src={author.photo} alt={`${author.name} portrait`} width="400" height="400" loading="lazy" decoding="async" class="block dt:hidden mx-auto w-45 h-45 rd-full object-cover
							shadow-[0_8px_24px_rgba(0,0,0,0.12)]
							border-3 border-white/85" />
					<img src={author.photo_dark} alt={`${author.name} portrait`} width="400" height="400" loading="lazy" decoding="async" class="hidden dt:block mx-auto w-45 h-45 rd-full object-cover
							shadow-[0_8px_24px_rgba(0,0,0,0.12)]
							border-3 border-white/85" />
					<figcaption class="sr-only">{author.name}</figcaption>
				</figure>

				<div class="mt-3.5 mb-0.5 text-center font-700 text-18px tracking-wide">{author.name}</div>
				<div class="text-center text-0.92rem text-gray-500 mb-2 dt:text-gray-400">{author.title}</div>

				<div class="h-px my-3 mx-auto w-[85%]
						bg-gradient-to-r from-transparent via-black/12 to-transparent
						dt:(via-white/14)"></div>

				<p class="text-center text-0.95rem leading-6 text-gray-700 dt:text-gray-200">{author.intro}</p>
			</section>

			{/* 时间轴 */}
			<ul class="list-none ml-5">
				{
					chronicles.map(chronicle => (
						<li
							class="
								relative mb-2 pb-2
								before:(absolute content-empty top-3.4 left--3.8 h-full b-l-2 b-l-solid b-primary)
								last:after:(absolute content-empty left--5 bottom--4 w-2 h-2 b-2 b-solid b-primary rd-full bg-primary)
							">
							<span
								class="
									relative font-mono
									before:(absolute content-empty inline-block top-1 left--5 w-2 h-2 b-2 b-solid b-primary rd-full)
								">
								{Time.date(chronicle.date)}
							</span>

							<ul class="my-2 pl-4 list-none">
								{chronicle.events.map(event => {
									const remove = event?.match(/^~(?!~)(.*)$/);
									return (
										<li
											class="
												relative my-1
												before:(absolute content-empty inline-block top-2 left--4 w-1 h-1 b b-solid b-primary rd-full)
											">
											{remove ? <del>{remove[1]}</del> : event}
										</li>
									);
								})}
							</ul>
						</li>
					))
				}
			</ul>
		</aside>
	</main>
</Base>
