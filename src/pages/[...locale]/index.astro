---
import { i18n } from "astro:config/client";
import { render, getCollection } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import Time from "$utils/time";
import Base from "$layouts/Base.astro";
import Heatmap from "$components/Heatmap.svelte";
import config from "$config";
import i18nit from "$i18n";

// 默认语言不添加前缀
export async function getStaticPaths() {
	return i18n!.locales.map(locale => {
		return { params: { locale: locale == i18n?.defaultLocale ? undefined : (locale as string) } };
	});
}

const { locale = i18n!.defaultLocale } = Astro.params;

const t = i18nit(locale);

// 按时间序获取前言
const prefaces = (
	await getCollection("preface", preface => {
		// Extract language and ID from file path structure
		const [language, id] = preface.id.split("/");
		preface.id = id;

		// Filter by current locale
		return language == locale;
	})
).sort((a, b) => b.data.timestamp.getTime() - a.data.timestamp.getTime());

// 按时间序获取发布的笔记
const notes = (
	await getCollection("note", note => {
		// Extract language and note ID from file path structure
		const [language] = note.id.split("/");

		// Filter published notes by current locale
		return !note.data.draft && language == locale;
	})
).sort((a, b) => b.data.timestamp.getTime() - a.data.timestamp.getTime());

// 按时间序获取发布的随笔
const jottings = await getCollection("jotting", jotting => {
	// Extract language and jotting ID from file path structure
	const [language] = jotting.id.split("/");

	// Filter published jottings by current locale
	return !jotting.data.draft && language == locale;
});

// Get the most recent note and preface for display
const newest = notes[0];
const preface = prefaces[0];
// Render preface content if available, otherwise use empty object
const { Content } = preface ? await render(preface) : ({} as any);
---

<Base title={t("navigation.home")} {locale}>
	<main class="flex flex-col gap-5 sm:gap-20 flex-grow">
		<header class="relative md:h-[40vh] md:min-h-40 sm:h-[20vh] sm:min-h-20 p-0">
			{config.prologue && <article class="top-0 left-0 z-10 max-w-[36ch] font-cursive font-thin text-xl sm:text-2xl leading-loose whitespace-pre-line">{config.prologue}</article>}

			<img id="site-logo" src="/crow-logo.png" alt="Site logo" class="dt:invert-100 ratio-img absolute bottom-0 right-0 z-0 max-h-[calc(100%-2.5rem)] max-w-[50%] opacity-95 pointer-events-none select-none" />
		</header>

		{
			preface && (
				<section class="flex flex-col">
					<article class="markdown">
						<Content />
					</article>
					<a href={getRelativeLocaleUrl(locale, "/preface")} class="self-end my-2 text-size-sm c-secondary">
						—— {Time.date.locale(preface.data.timestamp, locale)}
					</a>
				</section>
			)
		}

		{
			newest && (
				<footer class="flex items-center justify-center flex-wrap-reverse gap-10">
					<Heatmap {locale} {notes} {jottings} />

					<blockquote class="flex-grow">
						<h3>{t("home.newest")}</h3>
						<div class="flex flex-col sm:flex-row justify-between gap-1 mt-2">
							<a href={getRelativeLocaleUrl(locale, `/note/${newest.id.split("/").slice(1).join("/")}`)} class="link">
								{newest.data.series ? `${newest.data.series} | ` : ""}
								{newest.data.title}
							</a>
							<div class="flex gap-1">
								{newest.data.tags?.map(tag => (
									<span class="c-remark text-size-sm">#{tag}</span>
								))}
							</div>
						</div>
						<time title={Time.full(newest.data.timestamp)} class="c-remark font-mono text-xs">
							{Time(newest.data.timestamp)}
						</time>
					</blockquote>
				</footer>
			)
		}
	</main>
</Base>
